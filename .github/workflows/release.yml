name: CI/CD Workflow

on:
  push:
    branches:
      - '**' # Trigger on push to any branch
  pull_request: # Trigger on pull request events [opened, reopened, or source branch updated]
    branches:
      - dev
      - staging
      - main

permissions:
    contents: write
    pull-requests: write

jobs:
  sanity-check:
    name: Sanity Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Conventional Commits # conventional commits
      uses: webiny/action-conventional-commits@v1.3.0
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Optional, for private repositories.
        # allowed-commit-types: "feat,fix,ci,chore,dev,BREAKING CHANGE,test" # Optional, set if you want a subset of commit types to be allowed.
        #


    - name: Setup cargo toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Test
      uses: clechasseur/rs-cargo@v2
      with:
        command: test
        args: --verbose --manifest-path Cargo.toml
        
    - name: Build
      uses: clechasseur/rs-cargo@v2
      with:
        command: build
        args: --verbose --release --manifest-path Cargo.toml

  get-current-branch:
    name: Get Target Branch
    needs: 
      - sanity-check
    runs-on: ubuntu-latest
    outputs:
      value: ${{ env.current_branch }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Get Current Branch
        run : echo "current_branch=$(git branch --show-current)" >> $GITHUB_ENV
      
      - name: Display Current Branch
        run: echo "Current Branch is ${{ env.current_branch }}"
  
  check-branch-rules:
    if: github.event_name != 'push'
    needs:
      - get-current-branch
    name: Check Branch Rules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      # - name: Only allow staging or hotfix to main
      #   if: github.base_ref == 'main'
      #   run: |
      #     if [[ ${{ github.head_ref }} != staging ]] && ! [[ ${{ github.head_ref }} =~ ^hotfix/ ]]; 
      #     then
      #       echo "This PR is not allowed. Only PRs from staging or hotfix/* are allowed into main."
      #       exit 1
      #     fi
      
      # - name: Only allow dev or hotfix to staging
      #   if: github.base_ref == 'staging'
      #   run: |
      #     if [[ ${{ github.head_ref }} != dev ]] && ! [[ ${{ github.head_ref }} =~ ^hotfix/ ]]; 
      #     then
      #       echo "This PR is not allowed. Only PRs from dev or hotfix/* are allowed into staging."
      #       exit 1
      #     fi

  check-push-rules:
    name: Check Push Rules
    if: github.event_name == 'push' && !startsWith(github.event.head_commit.message, 'Merge pull request') && !startsWith(github.event.head_commit.message, 'Merge branch')
    runs-on: ubuntu-latest
    needs:
      - get-current-branch
    steps:
      - name: Checkout If Push allowed
        if: contains('main', needs.get-current-branch.outputs.value)
        run: |
          echo "Pushing directly to this branch is not allowed"
          exit 1
          
  build:
    name: Build for target
    if: contains('main', needs.get-current-branch.outputs.value)
    needs: 
      - get-current-branch
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Display Current Branch
        run: echo "Current Branch is ${{ needs.get-current-branch.outputs.value }}"
      
      - name: Build for Dev
        if: needs.get-current-branch.outputs.value == 'dev'
        run: | 
          echo "Building for ${{ needs.get-current-branch.outputs.value }}"
          echo "Dev Build Steps would be here"
      
      - name: Build for staging
        if: needs.get-current-branch.outputs.value == 'staging'
        run: | 
          echo "Building for ${{ needs.get-current-branch.outputs.value }}"
          echo "Staging Build Steps would be here"
      
      - name: Build for production
        if: needs.get-current-branch.outputs.value == 'main'
        run: | 
          echo "Building for ${{ needs.get-current-branch.outputs.value }}"
          echo "Production Build Steps would be here"